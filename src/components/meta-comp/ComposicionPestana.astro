---
import datosSet11Latino from './datosSet11Latino.json';
const { pestanas } = Astro.props;
const aumentos = datosSet11Latino.objetos;
function encontrarAumento(id) {
  const aumentoInfo = aumentos.find((aumento) => {
    return aumento.apiName === id;
  });
  return {
    icon: aumentoInfo.icon,
    desc: aumentoInfo.desc,
    name: aumentoInfo.name,
  };
}
---

<div class="containerPestanas">
  {
    Object.keys(pestanas).map(function (key: any, index: any) {
      let newKey = key;
      if (key.includes('Composiciones')) {
        [, ...newKey] = key.split('_');
        newKey = newKey.join(' ');
      }
      return (
        <div class={'pestanas' + (index === 0 ? ' active' : '')}>{newKey}</div>
      );
    })
  }
</div>
<div class="pestanaContainer">
  {
    Object.keys(pestanas).map(function (key: any, index: any) {
      return (
        <div class={'pestanaContainerContenido' + (index === 0 ? ' show' : '')}>
          {key === 'Aumentos' && (
            <div class="containerAumentos">
              {pestanas[key].map((id, index) => {
                const aumento = encontrarAumento(id);
                return (
                  <div class={'tooltip'}>
                    <img
                      src={aumento.icon}
                      alt={'Aumento ' + aumento.name}
                      class="aumentoImg"
                    />
                    <div class="containerTooltip">
                      <h1>{aumento.name}</h1>
                      <p>{aumento.desc}</p>
                    </div>
                  </div>
                );
              })}
            </div>
          )}
          {(key === 'Consejos' || key === 'Tips') && (
            <div class="consejos">
              {pestanas[key].map((parrafo) => {
                return <p>{parrafo}</p>;
              })}
            </div>
          )}
          {key.includes('Composiciones') && (
            <img
              src={pestanas[key]}
              alt={key.split('/')[key.split('/').length - 1]}
              class="imgCompPestana"
            />
          )}
          {key === 'Gameplay' && (
            <div class="divIframe">
              <iframe
                width="100%"
                src={
                  pestanas[key].replace('watch?v=', 'embed/') + '?enablejsapi=1'
                }
              />
            </div>
          )}
        </div>
      );
    })
  }
</div>

<script>
  const containerPestanas =
    document.getElementsByClassName('containerPestanas');

  Array.prototype.forEach.call(containerPestanas, (element, index) => {
    element.getElementsByClassName('pestanas')[0].classList.add('active');
  });

  const pestanas = document.querySelectorAll('.pestanas');
  pestanas.forEach((pestana) => {
    pestana.addEventListener('click', () => {
      const pestanaActive =
        pestana.parentElement.querySelector(`.pestanas.active`);
      pestanaActive.classList.remove('active');
      const pestanaContainer = pestanaActive.parentElement.nextElementSibling;

      const indexPestanaDeactivate = Array.from(
        pestanaActive.parentNode.children
      ).indexOf(pestanaActive);
      pestanaContainer.children[indexPestanaDeactivate].classList.remove(
        'show'
      );

      const indexPestanaActive = Array.from(
        pestanaActive.parentNode.children
      ).indexOf(pestana);
      pestanaContainer.children[indexPestanaActive].classList.add('show');

      pestana.classList.add('active');
    });
  });
</script>

<style>
  .containerPestanas {
    display: flex;
    flex-direction: row;
    position: relative;
    color: white;
    align-items: center;
    justify-content: center;
    list-style-type: none;
    width: 100%;
    margin: 0;
    padding: 0 15px;
    box-sizing: border-box;
    gap: 5px;
  }

  .pestanas {
    list-style: none;
    background-color: var(--bg-secondary);
    width: max-content;
    padding: 10px;
    display: flex;
    align-items: center;
    justify-content: center;
    box-sizing: border-box;
    /*border: 2px solid grey;*/
    font-size: 1rem;
  }

  .pestanas:hover {
    cursor: pointer;
    background-color: var(--bg-primary);
  }

  .active {
    background-color: var(--bg-primary);
    border-bottom-color: var(--bg-primary);
  }

  .containerAumentos {
    display: flex;
    position: relative;
    align-items: center;
    margin: 20px;
    justify-content: center;
  }

  .pestanaContainer {
    display: flex;
    position: relative;
    width: 100%;
    margin-top: -5px;
  }

  .pestanaContainerContenido {
    background-color: var(--bg-primary);
    position: relative;
    align-items: center;
    justify-content: center;
    /* padding: 20px 20px; */
    width: 100%;
    gap: 5px;
    display: none;
  }

  .tooltip {
    display: flex;
    position: relative;
    width: 10%;
    align-items: center;
    justify-content: center;
  }

  .tooltip:hover .containerTooltip {
    visibility: visible;
  }

  .consejos {
    display: flex;
    flex-direction: column;
  }

  .aumentoImg {
    width: 100%;
    height: auto;
  }

  .containerTooltip {
    margin-left: -150px;
    bottom: 100%;
    left: 50%;
    visibility: hidden;
    width: 300px;
    background-color: black;
    color: white;
    text-align: center;
    border-radius: 3px;
    padding: 6px 6px;
    position: absolute;
    z-index: 50;
    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);
    box-sizing: border-box;
  }

  .imgCompPestana {
    width: 100%;
  }

  .divIframe {
    display: flex;
    position: relative;
    aspect-ratio: 16 / 9;
    width: 100%;
  }

  .show {
    display: flex;
  }

  p {
    font-size: 1rem;
    margin: 5px;
  }

  @media only screen and (max-width: 900px) {
    .containerPestanas {
      width: 100%;
      gap: 5px;
      flex-wrap: nowrap;
      overflow: scroll;
      justify-content: flex-start;
    }

    .pestanas {
      padding: 5px;
      font-size: small;
    }

    .pestanaContainerContenido {
      font-size: small;
    }

    .tooltip {
      position: initial;
      width: 12.5%;
    }

    .containerTooltip {
      width: 100%;
      left: 0;
      margin-left: 0;
    }

    .containerAumentos {
      margin: 5px;
    }
  }
</style>
