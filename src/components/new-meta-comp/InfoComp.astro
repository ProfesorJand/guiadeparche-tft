---
import {  Image } from 'astro:assets';
import ComposicionPestana from './ComposicionPestana.astro';
const { championsTier, index, alternativa } = Astro.props;
---

{
  championsTier.map(async (champTier, i) => {
    const src = champTier.ImgCompo;
    const srcCampeon = champTier.ImgCampeon;
    const espatula = champTier.Espatula;
    const tier = champTier.Tier; // tier S o Alternativa-S

    return (
      <section
        class:list={['infoComp',((tier === "S"  || tier === "Alternativa-S") && i === 0 ? 'show' : ''),alternativa ? "alternativa" : ""]}
        id={champTier.Titulo.replaceAll(' ', '-')}
      >
        <button class="btnClose">X</button>
        <header>
          <h1 class="titulo">{champTier.Titulo}</h1>
        </header>
        <div class="containerCompo"> 
          <figure class="composicionDiv">
            <figcaption class="sinergiasText">
              <span class="sinergiasSpan">{champTier.sinergias}</span>
            </figcaption>
            <Image
              src={src}
              alt={'Composicion Meta ' + champTier.Titulo}
              class="composicionImg show"
              loading={((tier === "S"  || tier === "Alternativa-S") && i === 0 ? 'eager' : 'lazy')}
              inferSize={true}
              />
              {espatula && Object.keys(espatula).map((key, index)=>{
                if(key === "Comp1" || key === "Comp2"){
                  return (
                      <Image 
                        src={espatula[key]}
                        alt={`Composicion Meta Espatula ` + champTier.Titulo}
                        class="composicionImg"
                        loading='lazy'
                        inferSize={true}
                      />
                    )
                  }
                }
              )}
          </figure>
          <div class="containerChampEspatula">
            <Image
              src={srcCampeon}
              alt={'Composicion Meta ' + champTier.Titulo}
              class="campeonEspatula selected"
              loading={(index === 0 && i === 0 ? 'eager' : 'lazy')}
              width={50}
              height={50}
              inferSize={true}
              />
              {espatula && Object.keys(espatula).map((key, index)=>{
                if(key === "Item1" || key === "Item2"){
                  return (
                      <Image 
                        src={espatula[key]}
                        alt={`Composicion Meta Espatula ` + champTier.Titulo}
                        class="campeonEspatula"
                        loading={(index === 0 && i === 0 ? 'eager' : 'lazy')}
                        width={50}
                        height={50}
                        inferSize={true}
                      />
                    )
                }
              })}
          </div>
        </div>
        <ComposicionPestana Titulo={champTier.Titulo} Gamep={champTier.Gamep} Tips={champTier.Tips} Early={champTier.Early} Mid={champTier.Mid} Late={champTier.Late} index={index}/>
      </section>
    );
  })
}

<script>
  document.addEventListener('astro:page-load', () => {
    const btnClose = document.querySelectorAll('.btnClose');
    const champEspatula = document.querySelectorAll(".campeonEspatula");
    const compoEstaputa = document.querySelectorAll(".composicionImg");
    btnClose.forEach((btn) => {
      btn.addEventListener('click', () => {
        btn.parentElement.classList.remove('show');
        const alt = btn.parentElement.id.replaceAll('-', ' ');
        const imgSelected = document.querySelector(`div[data-alt="${alt}"]`);
        imgSelected.classList.remove('imgSelected');
      });
    });
    champEspatula.forEach((champ, i) =>{
      champ.addEventListener("click",()=>{
        if(!champ.classList.contains("selected")){
          const champEspatulaSelected = champ.parentElement.querySelector(".campeonEspatula.selected")
          const padreChampEspatulaSelected= champEspatulaSelected?.parentElement.parentElement;
          const compEspatulaSelected = padreChampEspatulaSelected.querySelector(".composicionImg.show")
          champEspatulaSelected?.classList.toggle("selected");
          compEspatulaSelected?.classList.toggle("show");
          compoEstaputa[i].classList.toggle("show");
          champ.classList.toggle("selected");
        }
       
      }, true)
    })
  });
</script>

<style>
  .infoComp {
    display: none;
    flex-direction: column;
    position: relative;
    gap: 5px;
    margin: 5px 0px;
    width: 100%;
    border: 2px solid var(--border-color);
    box-sizing: border-box;
  }

  .btnClose {
    display: flex;
    position: static;
    width: 20px;
    height: auto;
    text-align: center;
    margin: 0;
    top: 0;
    left: 0;
    background-color: var(--border-color);
    border: 1px solid var(--border-color);
    padding: 0px 5px;
    border-radius: 0px;
    cursor: pointer;
    justify-content: center;
    align-items: center;
    font-weight: bold;
  }

  .btnClose:hover {
    background-color: var(--bg-secondary);
    color: white;
  }

  .titulo {
    color: white;
    display: flex;
    position: relative;
    align-items: center;
    justify-content: center;
    font-size: larger;
    margin: 0;
    padding: 0;
    text-align: center;
  }

  .sinergiasText {
    color: white;
    display: flex;
    position: relative;
    align-items: center;
    justify-content: center;
    margin: 0;
    width: 100%;
    padding: 0 20px;
    text-align: center;
    box-sizing: border-box;
  }

  .sinergiasSpan {
    text-overflow: ellipsis;
    overflow: hidden;
    white-space: nowrap;
    font-size: 1rem;
  }

  .composicionDiv {
    display: flex;
    position: relative;
    flex-direction: column;
    align-items: center;
    margin: 0;
    width: 100%;
  }

  .composicionImg {
    display: none;
    position: relative;
    width: 100%;
    height: auto;

  }

  .containerCompo{
    display: flex;
    flex-direction: row;
  }

  .containerChampEspatula{
    display: flex;
    flex-direction: column;
    cursor: pointer;
    width: 10%;
  }

  .campeonEspatula{
    width: 100%;
    height: auto;
    transform: scale(0.9);
    transition: 0.5s;
  }

  .campeonEspatula:hover{
    transform: scale(1);
  }

  .show {
    display: flex;
  }

  .selected{
    transform: scale(1);
  }

  @media only screen and (min-width: 900px) {
    .titulo {
      font-size: 2rem;
    }
    .composicionDiv {
      width: 90%;
    }
  }
</style>
