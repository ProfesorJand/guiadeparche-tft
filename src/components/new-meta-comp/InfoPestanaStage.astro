---
const {info, Titulo, check} = Astro.props;
import { Image } from 'astro:assets';
import datosSet11Latino from './datosSet11Latino.json';
const aumentos = datosSet11Latino.objetos;
function encontrarAumento(id) {
  const aumentoInfo = aumentos.find((aumento) => {
    return aumento.apiName === id;
  });
  return {
    icon:
      aumentoInfo?.icon ||
      'https://raw.communitydragon.org/latest/game/assets/maps/tft/icons/augments/hexcore/pandoras-bench-i.png',
    desc: aumentoInfo?.desc || 'actualizando...',
    name: aumentoInfo?.name || 'Upss',
  };
}
---


    {(info) && info.Aum && Object.keys(info.Aum).map((key)=>{
      return (
        <div class={'containerAumentos'}>{
            info.Aum[key].map((aum, index)=>{
            const aumento = encontrarAumento(aum);
            return (
            <div class={'tooltip'}>
                      <Image
                        src={aumento.icon.replaceAll(".tft_set11","")}
                        alt={'Aumento ' + aumento.name}
                        class="aumentoImg"
                        loading="lazy"
                        width={50}
                        height={50}
                        inferSize={true}
                      />
                      <div class="containerTooltip">
                        <h1>{aumento.name}</h1>
                        <p>{aumento.desc.replaceAll('<br>', '\n')}</p>
                      </div>
              </div>
            )
          })
        }
        </div>
      )
    })}
    {(info) &&
      <div class="containerPestanaInfoComp" >
        {
          (info.Comp1 && info.Nivel1) &&
            <div class="containerCompsNivel">
            <h2 class="nivelCompH2">Level {info.Nivel1}</h2>
            <Image
            class="InfoCompImg"
            loading="lazy"
            src={info.Comp1}
            alt={`Early Comp ${Titulo}`}
            inferSize={true}
            />
            </div>
        }
        {
          (info.Comp2 && info.Nivel2) &&
            <div class="containerCompsNivel">
            <h2 class="nivelCompH2">Level {info.Nivel2}</h2>
            <Image
            class="InfoCompImg"
            loading="lazy"
            src={info.Comp2}
            alt={`Early Comp ${info}`}
            inferSize={true}
            />
            </div>
        }
      </div>
    }

<style>

.containerTooltip {
    margin-left: -150px;
    bottom: 100%;
    left: 50%;
    display: none;
    width: 300px;
    background-color: black;
    color: white;
    text-align: center;
    border-radius: 3px;
    padding: 6px 6px;
    position: absolute;
    z-index: 50;
    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);
    box-sizing: border-box;
  }

  .imgCompPestana {
    width: 100%;
    height: auto;
    padding: 20px;
    display: flex;
    position: relative;
    box-sizing: border-box;
  }

    .containerAumentos {
    width: 100%;
    box-sizing: border-box;
    display: flex;
    position: relative;
    align-items: center;
    /* margin: 20px; */
    justify-content: center;
    box-sizing: border-box;
  }

  .pestanaContainer {
    display: flex;
    position: relative;
    width: 100%;
    margin-top: -5px;
  }

  .containerInfoPestanas{
    display: flex;
    flex-direction: column;
    width: 100%;
  }

  .pestanaContainerContenido {
    background-color: var(--bg-primary);
    position: relative;
    align-items: center;
    justify-content: center;
    /* padding: 20px 20px; */
    width: 100%;
    gap: 5px;
    display: none;
  }

  .tooltip {
    display: flex;
    position: relative;
    width: 10%;
    align-items: center;
    justify-content: center;
  }

  .tooltip:hover .containerTooltip {
    display: flex;
    flex-direction: column;
  }

  .containerPestanaInfoComp{
    display: flex;
    flex-direction: row;
    width: 100%;
  }

  .containerCompsNivel{
    display: flex;
    flex-direction: column;
    width: 100%;
    align-items: center;
  }

  .InfoCompImg{
    display: flex;
    width: 80%;
    height: auto;
  }

.aumentoImg {
    width: 100%;
    height: auto;
  }
.nivelCompH2{
    font-size: 16px;
    text-align: center;
}

@media only screen and (max-width: 900px) {
  .tooltip{
    position:initial
  }
  .pestanasContainer{
    position: relative;
  }
}

</style>