---
// interface Props {
//   channel: string;
// }
// const { channel } = Astro.props;
---

<div id="twitch-embed" ></div>

<!-- Load the Twitch embed script -->
<!-- <script src="https://embed.twitch.tv/embed/v1.js" data-astro-rerun is:inline></script> -->

<!-- Create a Twitch.Embed object that will render within the "twitch-embed" element. -->

<script>
    document.addEventListener('astro:page-load', () => {
      setTimeout(() => {
        let embed;
        var script = document.createElement('script');
        script.type = 'text/javascript';
        script.src = 'https://embed.twitch.tv/embed/v1.js';
        script.id = "scriptTwitch"
        script.async = true;
        script.setAttribute("type","text/javascript")
        document.getElementsByTagName('head')[0].appendChild(script);

        script.onload = function() { 
          const divTwitch = document.getElementById('twitch-embed');
          //var channel = divTwitch.dataset.channel;
          var options = {
            width: '100%',
            channel: "midudev", // cambiar el string a la variable -> channel
            layout: 'video',
            autoplay: true,
            allowfullscreen: true,
            parent: ['tft.guiadeparche.com'],
          };
          if(!embed){
            embed = new Twitch.Embed('twitch-embed', options);
            embed.addEventListener(Twitch.Embed.READY, initiate);
          }
          function initiate() {
            embed.addEventListener(Twitch.Embed.ONLINE, handleOnline);
            embed.addEventListener(Twitch.Embed.OFFLINE, checkAnotherStreamer);
            embed.removeEventListener(Twitch.Embed.READY, initiate);
          }

          function handleOnline() {
            embed.removeEventListener(Twitch.Embed.ONLINE, handleOnline);
            embed.addEventListener(Twitch.Embed.OFFLINE, checkAnotherStreamer);
            divTwitch.classList.remove('hide');
            divTwitch.classList.add('show');
            embed.setMuted(false);
          }
          function checkAnotherStreamer(){
            embed.setChannel("relic_lol");
            embed.addEventListener(Twitch.Embed.OFFLINE, volverJupeson);
          }
          function volverJupeson(){
            embed.setChannel("jupeson");
            embed.removeEventListener(Twitch.Embed.OFFLINE, checkAnotherStreamer);
            embed.addEventListener(Twitch.Embed.ONLINE, handleOnline);
            embed.setMuted(true);
          }
        }
      }, 10000)
  })
</script>


<!--
<script src="https://embed.twitch.tv/embed/v1.js" is:inline></script>

<script type="text/javascript" is:inline data-astro-rerun>
  const divTwitch = document.getElementById('twitch-embed');
    //var channel = divTwitch.dataset.channel;
    var embed;
    var options = {
      width: '100%',
      channel: "jupeson", // cambiar el string a la variable -> channel
      layout: 'video',
      autoplay: true,
      allowfullscreen: true,
      parent: ['tft.guiadeparche.com'],
    };
    if(!embed){
      embed = new Twitch.Embed('twitch-embed', options);
      embed.addEventListener(Twitch.Embed.READY, initiate);
    }


    function initiate() {
      embed.addEventListener(Twitch.Embed.ONLINE, handleOnline);
      embed.addEventListener(Twitch.Embed.OFFLINE, handleOffline);
      embed.removeEventListener(Twitch.Embed.READY, initiate);
    }

    function handleOnline() {
      embed.removeEventListener(Twitch.Embed.ONLINE, handleOnline);
      embed.addEventListener(Twitch.Embed.OFFLINE, handleOffline);
      divTwitch.classList.remove('hide');
      divTwitch.classList.add('show');
      embed.setMuted(false);
    }
    function handleOffline() {
      checkAnotherStreamer();
    }
    function checkAnotherStreamer(){
      embed.setChannel("relic_lol");
      embed.addEventListener(Twitch.Embed.OFFLINE, volverJupeson);
    }
    function volverJupeson(){
      embed.setChannel("jupeson");
      embed.removeEventListener(Twitch.Embed.OFFLINE, handleOffline);
      embed.addEventListener(Twitch.Embed.ONLINE, handleOnline);
      embed.setMuted(true);
    }
</script>
-->

<style>
  #twitch-embed {
      display: flex;
      position: relative;
      box-sizing: border-box;
      width: 100%;
      aspect-ratio: 16/9;
      padding: calc(9rem / 16) 1rem;
    }
  .hide {
    display: none;
  }
  .show {
    display: flex;
  }

  @media only screen and (min-width: 900px) {
      #twitch-embed {
        position: fixed;
        bottom: 0px;
        left: 0px;
        width: 25%;
      }
  }
</style>
